---
import BaseLayout from '../layouts/BaseLayout.astro';
import projectsData from '../data/projects.json';

// Proje verilerini hazırla ve sırala
// 1. Yıla göre sırala (en yeni → en eski)
// 2. Aynı yıldaki projeleri alfabetik sırala (A → Z)
const projects = projectsData.projects.sort((a, b) => {
  // Tarihleri sayıya çevir (örn: "2023" → 2023)
  const yearA = parseInt(a.date);
  const yearB = parseInt(b.date);
  
  // Önce yıla göre sırala (büyükten küçüğe - en yeni en üstte)
  if (yearA !== yearB) {
    return yearB - yearA;
  }
  
  // Aynı yılsa, başlığa göre alfabetik sırala (A-Z)
  return a.title.localeCompare(b.title, 'tr', { sensitivity: 'base' });
});

const categories = projectsData.categories;
---

<BaseLayout 
  title="Projelerimiz - Türkel Global Stands"
  description="Gerçekleştirdiğimiz fuar standı projeleri. Mebel 2022, İtm Türkiye 2022, Middle East Energy 2023 ve daha fazlası."
>
  <!-- Page Header -->
  <section class="py-16 bg-navy text-white">
    <div class="container">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-h4 font-hanken font-medium mb-4">
          Projelerimiz
        </h1>
        <p class="text-body text-white/80 text-lg leading-relaxed">
          Gerçekleştirdiğimiz başarılı fuar standı projelerimizi keşfedin. 
          Her proje, mükemmellik arayışımızın ve yaratıcılığımızın bir yansımasıdır.
        </p>
      </div>
    </div>
  </section>

  <!-- Projects Grid -->
  <section class="py-section-lg">
    <div class="container">
      <div class="max-w-7xl mx-auto">
        <!-- Search Bar -->
        <div style="max-width: 28rem; margin: 0 auto 2rem auto; padding: 0 1rem;">
          <div style="position: relative;">
            <input 
              type="text" 
              id="search-input" 
              placeholder="Proje ara... (fuar adı, şirket, lokasyon)" 
              style="width: 100%; padding: 12px 16px 12px 48px; font-size: 14px; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 8px; transition: all 0.3s ease;"
            />
            <div style="position: absolute; left: 16px; top: 50%; transform: translateY(-50%); color: #6b7280;">
              <svg style="width: 20px; height: 20px;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
            <button id="clear-search" style="position: absolute; right: 12px; top: 50%; transform: translateY(-50%); width: 24px; height: 24px; color: #6b7280; background: none; border: none; cursor: pointer; transition: color 0.3s ease; display: none;">
              <svg style="width: 16px; height: 16px;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Main Category Filter Buttons -->
        <div id="main-filters" style="display: flex; flex-wrap: wrap; justify-content: center; gap: 0.5rem; margin-bottom: 1rem; padding: 0 1rem;">
          <button class="main-filter-btn active" data-category="all" style="display: inline-block; padding: 12px 24px; font-size: 14px; font-weight: 500; color: white; background: #f97316; border: 1px solid #f97316; border-radius: 8px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap; box-shadow: 0 4px 12px rgba(249, 115, 22, 0.25);">
            Tüm Projeler
          </button>
          <button class="main-filter-btn" data-category="grup-katilim" style="display: inline-block; padding: 12px 24px; font-size: 14px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 8px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Grup Katılım Stantlar
          </button>
          <button class="main-filter-btn" data-category="milli-katilim" style="display: inline-block; padding: 12px 24px; font-size: 14px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 8px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Milli Katılım Stantlar
          </button>
          <button class="main-filter-btn" data-category="stand-tasarimlari" style="display: inline-block; padding: 12px 24px; font-size: 14px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 8px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Stand Tasarımları
          </button>
        </div>

        <!-- Sub Category Filter Buttons (for Stand Tasarımları) -->
        <div id="sub-filters" style="display: none; flex-wrap: wrap; justify-content: center; gap: 0.25rem; margin-bottom: 1rem; padding: 0 1rem;">
          <button class="sub-filter-btn active" data-subcategory="all" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: white; background: #f97316; border: 1px solid #f97316; border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Tüm Stand Tasarımları
          </button>
          <button class="sub-filter-btn" data-subcategory="mobilya" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Mobilya
          </button>
          <button class="sub-filter-btn" data-subcategory="teknoloji" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Teknoloji
          </button>
          <button class="sub-filter-btn" data-subcategory="enerji" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Enerji
          </button>
          <button class="sub-filter-btn" data-subcategory="tekstil" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Tekstil
          </button>
          <button class="sub-filter-btn" data-subcategory="otomotiv" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Otomotiv
          </button>
          <button class="sub-filter-btn" data-subcategory="other" style="display: inline-block; padding: 8px 16px; font-size: 12px; font-weight: 500; color: #6b7280; background: white; border: 1px solid rgba(107, 114, 128, 0.3); border-radius: 6px; transition: all 0.3s ease; cursor: pointer; text-decoration: none; white-space: nowrap;">
            Diğer
          </button>
        </div>

        <!-- Results Info -->
        <div style="text-align: center; margin-bottom: 2rem; padding: 0 1rem;">
          <div id="results-info" style="background: rgba(107, 114, 128, 0.1); color: #6b7280; padding: 8px 16px; border-radius: 20px; font-size: 14px; font-weight: 500; display: inline-flex; align-items: center; gap: 8px;">
            <div style="width: 8px; height: 8px; background: #f97316; border-radius: 50%;"></div>
            <span id="results-count">0</span> proje gösteriliyor
          </div>
        </div>

        <!-- Projects Grid Container -->
        <div id="projects-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; padding: 0 1rem;">
          <!-- Projects will be loaded here -->
        </div>

        <!-- No results message will be shown in grid when needed -->
      </div>
    </div>
  </section>

  <!-- Projects JavaScript -->
  <script is:inline define:vars={{ projects }}>
    console.log('🔥 JavaScript yüklendi!');
    
    document.addEventListener('DOMContentLoaded', function() {
        console.log('✅ DOM yüklendi');
        console.log('✅ Proje sayısı:', projects.length);
        
        const grid = document.getElementById('projects-grid');
        
        if (grid) {
          console.log('✅ Grid bulundu');
          
          // DOM elementlerini bul
          const searchInput = document.getElementById('search-input');
          const clearSearchBtn = document.getElementById('clear-search');
          const resultsCount = document.getElementById('results-count');
          const mainFilterBtns = document.querySelectorAll('.main-filter-btn');
          const subFilterBtns = document.querySelectorAll('.sub-filter-btn');
          const subFiltersDiv = document.getElementById('sub-filters');
          
          let filteredProjects = [...projects];
          let currentMainCategory = 'all';
          let currentSubCategory = 'all';
          let currentSearchTerm = '';
          
          console.log('✅ Search input:', searchInput);
          console.log('✅ Main filter buttons:', mainFilterBtns.length);
          console.log('✅ Sub filter buttons:', subFilterBtns.length);
        
        // Proje kartı oluşturma fonksiyonu
        function createProjectCard(project, originalIndex) {
          return `
            <div onclick="openModal(${originalIndex})" class="project-card" style="background: white; border: 1px solid #e5e7eb; border-radius: 8px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.1); margin-bottom: 24px; cursor: pointer; transition: transform 0.3s ease-out;">
              <div style="position: relative; overflow: hidden; border-radius: 8px 8px 0 0;">
                <img 
                  src="${project.mainImage}" 
                  alt="${project.title}" 
                  loading="lazy"
                  style="width: 100%; height: 200px; object-fit: cover; background: #f3f4f6;"
                  onerror="this.style.background='#f3f4f6'; this.style.display='flex'; this.style.alignItems='center'; this.style.justifyContent='center'; this.innerHTML='Görsel Yok';"
                />
                <div style="position: absolute; top: 8px; right: 8px; background: rgba(0,0,0,0.7); color: white; padding: 4px 8px; border-radius: 4px; font-size: 12px;">
                  ${getMainCategory(project.category)}
                </div>
              </div>
              <div style="padding: 16px;">
                <h3 style="font-size: 18px; font-weight: 600; color: #000; margin-bottom: 8px; line-height: 1.3;">${project.title}</h3>
                <div style="display: flex; flex-direction: column; gap: 4px; color: #6b7280; margin-bottom: 8px; font-size: 14px;">
                  ${project.fairName ? `<span>${project.fairName}</span>` : ''}
                  ${project.company ? `<span>${project.company}</span>` : ''}
                  ${project.location ? `<span>${project.location}</span>` : ''}
                  <span>${project.date}</span>
                </div>
                <p style="color: #6b7280; margin: 0; font-size: 14px; font-weight: 500;">${project.type}</p>
              </div>
            </div>
          `;
        }

        // Ana kategori belirleme fonksiyonu
        function getMainCategory(category) {
          if (category === 'grup-katilim') return 'Grup Katılım Stantlar';
          if (category === 'milli-katilim') return 'Milli Katılım Stantlar';
          // Diğer tüm kategoriler Stand Tasarımları altında
          return 'Stand Tasarımları';
        }

        // Alt kategori görünen adını döndür (sadece Stand Tasarımları için)
        function getSubCategoryDisplayName(category) {
          const categoryMap = {
            'mobilya': 'Mobilya',
            'teknoloji': 'Teknoloji',
            'enerji': 'Enerji',
            'tekstil': 'Tekstil',
            'otomotiv': 'Otomotiv',
            'Elektrik': 'Elektrik',
            'Ev Tekstil': 'Ev Tekstil',
            'Makine': 'Makine',
            'Gıda': 'Gıda',
            'Sağlık': 'Sağlık',
            'İnşaat': 'İnşaat'
          };
          return categoryMap[category] || category || 'Diğer';
        }

        // Projeleri filtrele
        function filterProjects() {
          filteredProjects = projects.filter(project => {
            // Ana kategori filtresi
            let mainCategoryMatch = true;
            if (currentMainCategory !== 'all') {
              if (currentMainCategory === 'grup-katilim') {
                mainCategoryMatch = project.category === 'grup-katilim';
              } else if (currentMainCategory === 'milli-katilim') {
                mainCategoryMatch = project.category === 'milli-katilim';
              } else if (currentMainCategory === 'stand-tasarimlari') {
                // Stand Tasarımları - grup-katilim ve milli-katilim dışındaki tüm kategoriler
                mainCategoryMatch = project.category !== 'grup-katilim' && project.category !== 'milli-katilim';
              }
            }

            // Alt kategori filtresi (sadece Stand Tasarımları seçiliyse)
            let subCategoryMatch = true;
            if (currentMainCategory === 'stand-tasarimlari' && currentSubCategory !== 'all') {
              if (currentSubCategory === 'other') {
                // Diğer alt kategorisi - tanımlı alt kategoriler dışındakiler
                const definedSubCategories = ['mobilya', 'teknoloji', 'enerji', 'tekstil', 'otomotiv', 'Elektrik', 'Ev Tekstil', 'Makine', 'Gıda', 'Sağlık', 'İnşaat'];
                subCategoryMatch = !definedSubCategories.includes(project.category);
              } else {
                subCategoryMatch = project.category?.toLowerCase() === currentSubCategory.toLowerCase() ||
                                 project.category === currentSubCategory;
              }
            }

            // Arama filtresi
            let searchMatch = true;
            if (currentSearchTerm) {
              const searchFields = [
                project.title,
                project.fairName,
                project.company,
                project.location,
                project.type,
                getMainCategory(project.category),
                getSubCategoryDisplayName(project.category)
              ].filter(Boolean).join(' ').toLowerCase();
              
              searchMatch = searchFields.includes(currentSearchTerm.toLowerCase());
            }

            return mainCategoryMatch && subCategoryMatch && searchMatch;
          });

          renderProjects();
        }

        // Projeleri render et
        function renderProjects() {
          if (filteredProjects.length === 0) {
            grid.innerHTML = `
              <div style="grid-column: 1 / -1; text-align: center; padding: 60px 20px; color: #6b7280;">
                <div style="font-size: 48px; margin-bottom: 16px;">🔍</div>
                <h3 style="font-size: 20px; font-weight: 600; margin-bottom: 8px; color: #374151;">Proje bulunamadı</h3>
                <p style="margin: 0;">Arama kriterlerinizi değiştirip tekrar deneyin.</p>
              </div>
            `;
          } else {
            const projectCards = filteredProjects.map(project => {
              const originalIndex = projects.findIndex(p => p.id === project.id);
              return createProjectCard(project, originalIndex);
            }).join('');
            
            grid.innerHTML = projectCards;
          }

          // Sonuç sayısını güncelle
          if (resultsCount) {
            resultsCount.textContent = filteredProjects.length;
          }
          console.log(`✅ ${filteredProjects.length} proje gösteriliyor`);
        }

        // İlk render
        renderProjects();

        // Event Listeners
        
        // Arama input'u
        if (searchInput) {
          searchInput.addEventListener('input', function(e) {
            currentSearchTerm = e.target.value.trim();
            
            // Clear button'u göster/gizle
            if (clearSearchBtn) {
              if (currentSearchTerm) {
                clearSearchBtn.style.display = 'block';
              } else {
                clearSearchBtn.style.display = 'none';
              }
            }
            
            filterProjects();
          });
        }

        // Arama temizle butonu
        if (clearSearchBtn) {
          clearSearchBtn.addEventListener('click', function() {
            if (searchInput) {
              searchInput.value = '';
              currentSearchTerm = '';
              clearSearchBtn.style.display = 'none';
              filterProjects();
              searchInput.focus();
            }
          });
        }

        // Ana kategori filter butonları
        if (mainFilterBtns.length > 0) {
          mainFilterBtns.forEach(btn => {
            btn.addEventListener('click', function() {
              console.log('Main filter clicked:', this.dataset.category);
              
              // Aktif butonu güncelle
              mainFilterBtns.forEach(b => {
                b.classList.remove('active');
                // Inactive style
                b.style.color = '#6b7280';
                b.style.background = 'white';
                b.style.borderColor = 'rgba(107, 114, 128, 0.3)';
                b.style.boxShadow = 'none';
              });
              
              this.classList.add('active');
              // Active style
              this.style.color = 'white';
              this.style.background = '#f97316';
              this.style.borderColor = '#f97316';
              this.style.boxShadow = '0 4px 12px rgba(249, 115, 22, 0.25)';
              
              // Ana kategoriyi güncelle
              currentMainCategory = this.dataset.category;
              
              // Alt filtre görünürlüğünü kontrol et
              if (currentMainCategory === 'stand-tasarimlari') {
                subFiltersDiv.style.display = 'flex';
                // Alt kategoriyi sıfırla
                currentSubCategory = 'all';
                resetSubFilters();
              } else {
                subFiltersDiv.style.display = 'none';
                currentSubCategory = 'all';
              }
              
              filterProjects();
            });
          });
        }

        // Alt kategori filter butonları
        if (subFilterBtns.length > 0) {
          subFilterBtns.forEach(btn => {
            btn.addEventListener('click', function() {
              console.log('Sub filter clicked:', this.dataset.subcategory);
              
              // Aktif butonu güncelle
              subFilterBtns.forEach(b => {
                b.classList.remove('active');
                // Inactive style
                b.style.color = '#6b7280';
                b.style.background = 'white';
                b.style.borderColor = 'rgba(107, 114, 128, 0.3)';
                b.style.boxShadow = 'none';
              });
              
              this.classList.add('active');
              // Active style
              this.style.color = 'white';
              this.style.background = '#f97316';
              this.style.borderColor = '#f97316';
              this.style.boxShadow = '0 4px 12px rgba(249, 115, 22, 0.25)';
              
              // Alt kategoriyi güncelle
              currentSubCategory = this.dataset.subcategory;
              
              filterProjects();
            });
          });
        }

        // Alt filtreleri sıfırla
        function resetSubFilters() {
          subFilterBtns.forEach(b => {
            b.classList.remove('active');
            b.style.color = '#6b7280';
            b.style.background = 'white';
            b.style.borderColor = 'rgba(107, 114, 128, 0.3)';
            b.style.boxShadow = 'none';
          });
          
          // "Tüm Stand Tasarımları" butonunu aktif yap
          const allSubBtn = document.querySelector('[data-subcategory="all"]');
          if (allSubBtn) {
            allSubBtn.classList.add('active');
            allSubBtn.style.color = 'white';
            allSubBtn.style.background = '#f97316';
            allSubBtn.style.borderColor = '#f97316';
            allSubBtn.style.boxShadow = '0 4px 12px rgba(249, 115, 22, 0.25)';
          }
        }

        // Klavye kısayolları
        document.addEventListener('keydown', function(e) {
          // Ctrl/Cmd + K ile arama odakla
          if ((e.ctrlKey || e.metaKey) && e.key === 'k' && searchInput) {
            e.preventDefault();
            searchInput.focus();
            searchInput.select();
          }
          
          // ESC ile arama temizle
          if (e.key === 'Escape' && document.activeElement === searchInput && searchInput) {
            if (currentSearchTerm) {
              searchInput.value = '';
              currentSearchTerm = '';
              if (clearSearchBtn) {
                clearSearchBtn.style.display = 'none';
              }
              filterProjects();
            } else {
              searchInput.blur();
            }
          }
        });
        
        // Modal HTML'ini sayfaya ekle (anasayfa ile aynı tasarım)
        const modalHTML = `
          <div id="project-modal" class="fixed inset-0 bg-black bg-opacity-75 z-50 hidden items-center justify-center p-2 md:p-4" onclick="closeModal()">
            <div class="bg-white rounded-lg max-w-5xl w-full h-[90vh] md:h-[75vh] flex flex-col md:flex-row overflow-hidden" onclick="event.stopPropagation()">
              <!-- Sidebar -->
              <div class="w-full md:w-64 bg-white p-4 md:p-6 flex-shrink-0 flex flex-col order-2 md:order-1 max-h-[40vh] md:max-h-none overflow-y-auto md:overflow-visible">
                <!-- Modal Header -->
                <div class="flex items-center justify-between mb-6">
                  <h2 id="modal-title" class="text-xl font-semibold text-black"></h2>
                  <button onclick="closeModal()" class="w-8 h-8 flex items-center justify-center rounded-full hover:bg-grey/20 transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                  </button>
                </div>
                
                <!-- Fair Details -->
                <div class="grid grid-cols-1 gap-4 mb-8">
                  <div>
                    <h4 class="text-sm font-semibold text-black mb-1">Fuar Adı</h4>
                    <p id="modal-fair-name" class="text-sm text-grey"></p>
                  </div>
                  <div>
                    <h4 class="text-sm font-semibold text-black mb-1">Lokasyon</h4>
                    <p id="modal-location" class="text-sm text-grey"></p>
                  </div>
                  <div>
                    <h4 class="text-sm font-semibold text-black mb-1">Tarih</h4>
                    <p id="modal-date" class="text-sm text-grey"></p>
                  </div>
                  <div>
                    <h4 class="text-sm font-semibold text-black mb-1">Şirket</h4>
                    <p id="modal-company" class="text-sm text-grey"></p>
                  </div>
                  <div>
                    <h4 class="text-sm font-semibold text-black mb-1">Stant Tipi</h4>
                    <p id="modal-type" class="text-sm text-grey"></p>
                  </div>
                </div>

                <!-- Contact Section -->
                <div class="mt-auto border-t border-grey/20 pt-6">
                  <h4 class="text-sm font-semibold text-black mb-3">Stant Tasarımı</h4>
                  <p class="text-xs text-grey mb-4 leading-relaxed">
                    İhtiyaçlarınızı konuşalım mı? Size özel stant tasarımları için bizimle iletişime geçin.
                  </p>
                  <a href="/iletisim" class="inline-flex items-center justify-center w-full px-4 py-2 text-sm font-medium text-white bg-orange rounded-lg hover:bg-navy transition-colors">
                    İletişime Geçin
                  </a>
                </div>
              </div>
              
              <!-- Image Slider Area -->
              <div class="flex-1 relative bg-black order-1 md:order-2 min-h-[50vh] md:min-h-0">
                <div class="absolute inset-0">
                  <div id="modal-slider" class="relative w-full h-full">
                    <!-- Images will be populated by JavaScript -->
                  </div>
                  
                  <!-- Slider Navigation -->
                  <button id="modal-prev" class="absolute left-2 md:left-4 top-1/2 transform -translate-y-1/2 w-8 h-8 md:w-10 md:h-10 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center transition-colors z-10">
                    <svg class="w-4 h-4 md:w-5 md:h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                  </button>
                  <button id="modal-next" class="absolute right-2 md:right-4 top-1/2 transform -translate-y-1/2 w-8 h-8 md:w-10 md:h-10 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center transition-colors z-10">
                    <svg class="w-4 h-4 md:w-5 md:h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                    </svg>
                  </button>
                  
                  <!-- Image Counter -->
                  <div class="absolute bottom-2 md:bottom-4 left-1/2 transform -translate-x-1/2 bg-black/50 text-white px-2 md:px-3 py-1 rounded-full text-xs md:text-sm z-10">
                    <span id="modal-counter">1 / 3</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        `;
        
        // Modal'ı body'e ekle
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        // Modal değişkenleri
        let currentModalImage = 0;
        let currentProject = null;

        // Modal fonksiyonları
        window.openModal = function(projectIndex) {
          console.log('Modal açılıyor, proje:', projectIndex);
          
          const project = projects[projectIndex];
          currentProject = project;
          currentModalImage = 0;
          
          // Sidebar içeriğini güncelle
          document.getElementById('modal-title').textContent = project.title;
          document.getElementById('modal-fair-name').textContent = project.fairName;
          document.getElementById('modal-location').textContent = project.location;
          document.getElementById('modal-date').textContent = project.date;
          document.getElementById('modal-company').textContent = project.company;
          document.getElementById('modal-type').textContent = project.type;
          
          // Image slider'ı kur
          setupModalSlider();
          
          const modal = document.getElementById('project-modal');
          if (modal) {
            modal.classList.remove('hidden');
            modal.style.display = 'flex';
            document.body.style.overflow = 'hidden';
            console.log('✅ Modal açıldı, proje:', project.title);
          } else {
            console.error('❌ Modal bulunamadı');
          }
        }
        
        function setupModalSlider() {
          const slider = document.getElementById('modal-slider');
          const counter = document.getElementById('modal-counter');
          
          // Slider içeriğini temizle ve yeniden oluştur
          slider.innerHTML = '';
          
          currentProject.gallery.forEach((imageSrc, index) => {
            const imageDiv = document.createElement('div');
            imageDiv.className = 'absolute inset-0 transition-opacity duration-300';
            imageDiv.style.opacity = index === 0 ? '1' : '0';
            
            const img = document.createElement('img');
            img.src = imageSrc;
            img.alt = currentProject.title;
            img.loading = 'lazy';
            img.className = 'w-full h-full object-cover';
            img.style.background = '#f3f4f6';
            img.onerror = function() {
              this.style.background = '#f3f4f6';
              this.style.display = 'flex';
              this.style.alignItems = 'center';
              this.style.justifyContent = 'center';
              this.innerHTML = 'Görsel Yok';
            };
            
            imageDiv.appendChild(img);
            slider.appendChild(imageDiv);
          });
          
          // Counter'ı güncelle
          counter.textContent = `1 / ${currentProject.gallery.length}`;
          
          // Navigation event listeners
          document.getElementById('modal-prev').onclick = () => changeModalImage(-1);
          document.getElementById('modal-next').onclick = () => changeModalImage(1);
        }
        
        function changeModalImage(direction) {
          const images = document.querySelectorAll('#modal-slider > div');
          const counter = document.getElementById('modal-counter');
          
          // Mevcut resmi gizle
          images[currentModalImage].style.opacity = '0';
          
          // Yeni index hesapla
          currentModalImage += direction;
          if (currentModalImage < 0) currentModalImage = images.length - 1;
          if (currentModalImage >= images.length) currentModalImage = 0;
          
          // Yeni resmi göster
          images[currentModalImage].style.opacity = '1';
          
          // Counter'ı güncelle
          counter.textContent = `${currentModalImage + 1} / ${images.length}`;
        }
        
        window.closeModal = function() {
          console.log('Modal kapatılıyor');
          const modal = document.getElementById('project-modal');
          if (modal) {
            modal.classList.add('hidden');
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
          }
        }
        
        // ESC tuşu ile kapatma
        document.addEventListener('keydown', function(e) {
          if (e.key === 'Escape') {
            closeModal();
          }
        });
        
        console.log('✅ Projeler eklendi:', filteredProjects.length);
      } else {
        console.error('❌ Grid bulunamadı');
      }
    });
  </script>

  <!-- Styles for animations and hover effects -->
  <style>
    .main-filter-btn:hover, .sub-filter-btn:hover {
      border-color: #f97316 !important;
      color: #f97316 !important;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(249, 115, 22, 0.15) !important;
    }
    
    .project-card {
      transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
    }
    
    .project-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }

    #search-input:focus {
      outline: none;
      border-color: #f97316 !important;
      box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.1) !important;
    }

    #clear-search:hover {
      color: #f97316 !important;
    }

    #sub-filters {
      transition: all 0.3s ease;
    }
  </style>
</BaseLayout>