---
// FAQ Section Component
import { getLangFromUrl, useTranslations, translatePath } from '../utils/i18n';

export interface Props {
  lang?: string;
}

const { lang = 'tr' } = Astro.props;
const t = useTranslations(lang as 'tr' | 'en');
---

<section class="relative py-section overflow-hidden bg-gradient-to-br from-white via-cream/30 to-white">
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-30">
    <div class="absolute top-10 left-10 w-2 h-2 bg-orange/20 rounded-full"></div>
    <div class="absolute top-20 left-32 w-1 h-1 bg-navy/20 rounded-full"></div>
    <div class="absolute top-32 left-16 w-1.5 h-1.5 bg-orange/30 rounded-full"></div>
    <div class="absolute top-48 left-48 w-1 h-1 bg-navy/15 rounded-full"></div>
    <div class="absolute top-64 left-8 w-2 h-2 bg-orange/25 rounded-full"></div>
    
    <div class="absolute top-16 right-20 w-1.5 h-1.5 bg-navy/20 rounded-full"></div>
    <div class="absolute top-40 right-8 w-1 h-1 bg-orange/30 rounded-full"></div>
    <div class="absolute top-56 right-32 w-2 h-2 bg-navy/15 rounded-full"></div>
    <div class="absolute top-72 right-16 w-1 h-1 bg-orange/20 rounded-full"></div>
    <div class="absolute top-96 right-40 w-1.5 h-1.5 bg-navy/25 rounded-full"></div>
    
    <div class="absolute bottom-20 left-24 w-1 h-1 bg-orange/20 rounded-full"></div>
    <div class="absolute bottom-32 left-40 w-2 h-2 bg-navy/15 rounded-full"></div>
    <div class="absolute bottom-48 left-12 w-1.5 h-1.5 bg-orange/25 rounded-full"></div>
    
    <div class="absolute bottom-16 right-28 w-1 h-1 bg-navy/20 rounded-full"></div>
    <div class="absolute bottom-40 right-12 w-1.5 h-1.5 bg-orange/30 rounded-full"></div>
    <div class="absolute bottom-56 right-36 w-1 h-1 bg-navy/15 rounded-full"></div>
  </div>
  
  <div class="container relative z-10">
    <!-- Full Width Layout -->
    <div class="max-w-6xl mx-auto">
      <!-- Section Header - Centered -->
      <div class="text-center mb-16 animate-on-scroll">
        <div class="flex items-center justify-center space-x-8 mb-8">
          <h2 class="section-heading">{t('faq.title')}</h2>
          <div class="flex items-center space-x-4 text-body text-grey">
            <span class="font-bold" id="current-faq">01</span>
            <div class="w-12 h-px bg-grey"></div>
            <span>05</span>
          </div>
        </div>
        <p class="text-lg text-grey max-w-2xl mx-auto">
          {t('faq.subtitle')}
        </p>
      </div>
      
      <!-- FAQ Accordion - Full Width -->
      <div class="space-y-0">
        <!-- FAQ 1 - Open by default -->
        <div class="border-b-4 border-black animate-on-scroll">
          <button class="w-full py-8 flex items-center text-left group faq-button" aria-expanded="true" data-faq="1">
            <div class="flex items-center space-x-6 flex-1">
              <span class="text-body text-grey">01</span>
              <h3 class="text-h4 font-semibold text-black">{t('faq.q1')}</h3>
            </div>
            <div class="w-12 h-12 rounded-full border border-orange flex items-center justify-center flex-shrink-0 ml-6">
              <svg class="w-5 h-5 text-orange transform rotate-180 transition-transform faq-icon" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </button>
          <!-- FAQ 1 Content - Inline -->
          <div class="faq-content pb-8" data-content="1">
            <div class="bg-cream p-6 rounded-lg ml-12">
              <p class="text-body text-grey leading-relaxed">
                {t('faq.a1')}
              </p>
            </div>
          </div>
        </div>
        
        <!-- FAQ 2 -->
        <div class="border-b border-grey animate-on-scroll">
          <button class="w-full py-8 flex items-center text-left group faq-button" aria-expanded="false" data-faq="2">
            <div class="flex items-center space-x-6 flex-1">
              <span class="text-body text-grey">02</span>
              <h3 class="text-h4 font-semibold text-black">{t('faq.q2')}</h3>
            </div>
            <div class="w-12 h-12 rounded-full border border-grey flex items-center justify-center flex-shrink-0 ml-6">
              <svg class="w-5 h-5 text-grey transition-transform faq-icon" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </button>
          <!-- FAQ 2 Content - Inline -->
          <div class="faq-content hidden pb-8" data-content="2">
            <div class="bg-cream p-6 rounded-lg ml-12">
              <p class="text-body text-grey leading-relaxed">
                {t('faq.a2')}
              </p>
            </div>
          </div>
        </div>
        
        <!-- FAQ 3 -->
        <div class="border-b border-grey animate-on-scroll">
          <button class="w-full py-8 flex items-center text-left group faq-button" aria-expanded="false" data-faq="3">
            <div class="flex items-center space-x-6 flex-1">
              <span class="text-body text-grey">03</span>
              <h3 class="text-h4 font-semibold text-black">{t('faq.q3')}</h3>
            </div>
            <div class="w-12 h-12 rounded-full border border-grey flex items-center justify-center flex-shrink-0 ml-6">
              <svg class="w-5 h-5 text-grey transition-transform faq-icon" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </button>
          <!-- FAQ 3 Content - Inline -->
          <div class="faq-content hidden pb-8" data-content="3">
            <div class="bg-cream p-6 rounded-lg ml-12">
              <p class="text-body text-grey leading-relaxed">
                {t('faq.a3')}
              </p>
            </div>
          </div>
        </div>
        
        <!-- FAQ 4 -->
        <div class="border-b border-grey animate-on-scroll">
          <button class="w-full py-8 flex items-center text-left group faq-button" aria-expanded="false" data-faq="4">
            <div class="flex items-center space-x-6 flex-1">
              <span class="text-body text-grey">04</span>
              <h3 class="text-h4 font-semibold text-black">{t('faq.q4')}</h3>
            </div>
            <div class="w-12 h-12 rounded-full border border-grey flex items-center justify-center flex-shrink-0 ml-6">
              <svg class="w-5 h-5 text-grey transition-transform faq-icon" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </button>
          <!-- FAQ 4 Content - Inline -->
          <div class="faq-content hidden pb-8" data-content="4">
            <div class="bg-cream p-6 rounded-lg ml-12">
              <p class="text-body text-grey leading-relaxed">
                {t('faq.a4')}
              </p>
            </div>
          </div>
        </div>
        
        <!-- FAQ 5 -->
        <div class="border-b border-grey animate-on-scroll">
          <button class="w-full py-8 flex items-center text-left group faq-button" aria-expanded="false" data-faq="5">
            <div class="flex items-center space-x-6 flex-1">
              <span class="text-body text-grey">05</span>
              <h3 class="text-h4 font-semibold text-black">{t('faq.q5')}</h3>
            </div>
            <div class="w-12 h-12 rounded-full border border-grey flex items-center justify-center flex-shrink-0 ml-6">
              <svg class="w-5 h-5 text-grey transition-transform faq-icon" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </button>
          <!-- FAQ 5 Content - Inline -->
          <div class="faq-content hidden pb-8" data-content="5">
            <div class="bg-cream p-6 rounded-lg ml-12">
              <p class="text-body text-grey leading-relaxed">
                {t('faq.a5')}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // FAQ Accordion functionality
  document.addEventListener('DOMContentLoaded', () => {
    const faqButtons = document.querySelectorAll('.faq-button');
    const currentFaqElement = document.getElementById('current-faq');
    
    faqButtons.forEach(button => {
      button.addEventListener('click', () => {
        const faqId = button.getAttribute('data-faq');
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        const content = button.parentElement?.querySelector(`[data-content="${faqId}"]`);
        const icon = button.querySelector('.faq-icon');
        
        // Close all other FAQs
        faqButtons.forEach(otherButton => {
          const otherId = otherButton.getAttribute('data-faq');
          if (otherId !== faqId) {
            otherButton.setAttribute('aria-expanded', 'false');
            const otherContent = otherButton.parentElement?.querySelector(`[data-content="${otherId}"]`);
            const otherIcon = otherButton.querySelector('.faq-icon');
            
            if (otherContent) otherContent.classList.add('hidden');
            if (otherIcon) otherIcon.classList.remove('rotate-180');
            
            // Reset border styles
            if (otherButton.parentElement) {
              otherButton.parentElement.classList.remove('border-b-4', 'border-black');
              otherButton.parentElement.classList.add('border-b', 'border-grey');
            }
            
            // Reset button styles
            const otherCircle = otherButton.querySelector('.w-12');
            if (otherCircle) {
              otherCircle.classList.remove('border-2', 'border-orange');
              otherCircle.classList.add('border', 'border-grey');
            }
            
            const otherSvg = otherButton.querySelector('svg');
            if (otherSvg) {
              otherSvg.classList.remove('text-orange');
              otherSvg.classList.add('text-grey');
            }
          }
        });
        
        // Toggle current FAQ
        button.setAttribute('aria-expanded', (!isExpanded).toString());
        
        if (!isExpanded) {
          // Open
          if (content) content.classList.remove('hidden');
          if (icon) icon.classList.add('rotate-180');
          
          // Update current FAQ indicator
          if (currentFaqElement) currentFaqElement.textContent = String(faqId).padStart(2, '0');
          
          // Update border styles
          if (button.parentElement) {
            button.parentElement.classList.remove('border-b', 'border-grey');
            button.parentElement.classList.add('border-b-4', 'border-black');
          }
          
          // Update button styles
          const circle = button.querySelector('.w-12');
          if (circle) {
            circle.classList.remove('border', 'border-grey');
            circle.classList.add('border-2', 'border-orange');
          }
          
          const svg = button.querySelector('svg');
          if (svg) {
            svg.classList.remove('text-grey');
            svg.classList.add('text-orange');
          }
        } else {
          // Close - Reset to default (01)
          if (content) content.classList.add('hidden');
          if (icon) icon.classList.remove('rotate-180');
          
          // Reset current FAQ indicator to default
          if (currentFaqElement) currentFaqElement.textContent = '01';
          
          // Reset border styles
          if (button.parentElement) {
            button.parentElement.classList.remove('border-b-4', 'border-black');
            button.parentElement.classList.add('border-b', 'border-grey');
          }
          
          // Reset button styles
          const circle = button.querySelector('.w-12');
          if (circle) {
            circle.classList.remove('border-2', 'border-orange');
            circle.classList.add('border', 'border-grey');
          }
          
          const svg = button.querySelector('svg');
          if (svg) {
            svg.classList.remove('text-orange');
            svg.classList.add('text-grey');
          }
        }
      });
    });
  });
</script>